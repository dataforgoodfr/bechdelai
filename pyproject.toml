[tool.poetry]
name = "bechdelai"
version = "0.0.2"
description = "Automating the Bechdel test and its variants for feminine representation in movies with AI"
authors = ["Data For Good <hellodataforgood@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8,<3.9.7 || >3.9.7,<3.11"
jupyter = { version = "^1.0.0", optional = true }
pandas = "^1.3.4"
numpy = "^1.21.3"
scikit-learn = "^1.0.1"
matplotlib = "^3.4.3"
plotly = "^5.3.1"
opencv-python = { version = "^4.5.4", optional = true }
tqdm = "^4.62.3"
tensorflow = "^2.7.0"
deepface = "^0.0.68"
umap-learn = "^0.5.2"
retina-face = { version = "^0.0.12", optional = true }
transformers = "^4.17.0"
torch = "^1.11.0"
torchvision = "^0.12.0"
torchaudio = { version = "^0.11.0", optional = true }
ftfy = "^6.1.1"
python-dotenv = ">=0.19.2"
lxml = "^4.8.0"
PyMuPDF = "^1.19.6"
Click = { version = ">=8.0.4", optional = true }
requests = ">=2.26.0"
beautifulsoup4 = ">=4.10.0"
chardet = ">=4.0.0"
openpyxl = "^3.0.10"
pytube = "^12.1.0"
mediapipe = { version = "^0.9.0", optional = true }
scenedetect = {extras = ["opencv"], version = "^0.6.1" , optional = true}
moviepy = { version = "^1.0.3", optional = true }
SpeechRecognition = { version = "^3.8.1", optional = true }
inaSpeechSegmenter = { version = "^0.7.3", optional = true }
llvmlite = "^0.39.1"
setuptools = ">=62.3.2"
openai = "^0.27.0"
openai-whisper = { version = "^20230307", optional = true }
gradio = "^3.20.1"

[tool.poetry.extras]
audio = ["torchaudio", "SpeechRecognition", "inaSpeechSegmenter", "openai-whisper", "moviepy"]
image = ["deepface", "opencv-python", "retina-face", "mediapipe"]
notebooks = ["jupyter"]
scripts = ["Click"]
video = ["scenedetect"]

[tool.poetry.dev-dependencies]
pywin32 = { version = "305", markers = "sys_platform == 'win32'" }
jupyter = "^1.0.0"
mkdocs = "^1.4.1"
streamlit = "1.13.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
scrap-movies = 'bechdelai.scripts.scrap_movies:cli'
